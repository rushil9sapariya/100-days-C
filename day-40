*/Q79: Perform diagonal traversal of matrix.*/
#include <stdio.h>
int main() 
{
    int rows, cols;
    printf("Enter the number of rows and columns: ");
    scanf("%d %d", &rows, &cols);
    int matrix[rows][cols];
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < rows; i++) 
    {
        for (int j = 0; j < cols; j++) 
        {
            scanf("%d", &matrix[i][j]);
        }
    }
    printf("The diagonal traversal is:\n");
    for (int s = 0; s < rows + cols - 1; s++) 
    {
        for (int i = 0; i < rows; i++) 
        {
            int j = s - i;
            if (j >= 0 && j < cols) 
            {
                printf("%d ", matrix[i][j]);
            }
        }
    }
    printf("\n");
    return 0;
}
*/Q80: Multiply two matrices */
#include <stdio.h>
int main() 
{
    int r1, c1, r2, c2;
    printf("Enter rows and columns for first matrix: ");
    scanf("%d %d", &r1, &c1);
    printf("Enter rows and columns for second matrix: ");
    scanf("%d %d", &r2, &c2);
    if (c1 != r2) 
    {
        printf("Error: The number of columns in the first matrix must be equal to the number of rows in the second matrix.\n");
        return 1;
    }
    int matrix1[r1][c1];
    int matrix2[r2][c2];
    int product[r1][c2];
    printf("Enter elements of the first matrix:\n");
    for (int i = 0; i < r1; i++) 
    {
        for (int j = 0; j < c1; j++) 
        {
            scanf("%d", &matrix1[i][j]);
        }
    }
    printf("Enter elements of the second matrix:\n");
    for (int i = 0; i < r2; i++) 
    {
        for (int j = 0; j < c2; j++) 
        {
            scanf("%d", &matrix2[i][j]);
        }
    }
    for (int i = 0; i < r1; i++) 
    {
        for (int j = 0; j < c2; j++) 
        {
            product[i][j] = 0;
        }
    }
    for (int i = 0; i < r1; i++) 
    {
        for (int j = 0; j < c2; j++) 
        {
            for (int k = 0; k < c1; k++) 
            {
                product[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }
    printf("Resultant matrix after multiplication:\n");
    for (int i = 0; i < r1; i++) 
    {
        for (int j = 0; j < c2; j++) 
        {
            printf("%d ", product[i][j]);
        }
        printf("\n");
    }
    return 0;
}
