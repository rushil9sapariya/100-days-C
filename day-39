/*Q77 : Check if the elemennts on the diagonal of a matrix are distinct.*/
#include <stdio.h>
int main() 
{
    int rows, cols;
    printf("Enter the number of rows and columns: ");
    scanf("%d %d", &rows, &cols);
    if (rows != cols) 
    {
        printf("False\n");
        return 0;
    }
    int matrix[rows][cols];
    int diagonal[rows];
    int isDistinct = 1;
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < rows; i++) 
    {
        for (int j = 0; j < cols; j++) 
        {
            scanf("%d", &matrix[i][j]);
        }
    }
    for (int i = 0; i < rows; i++) 
    {
        diagonal[i] = matrix[i][i];
    }
    for (int i = 0; i < rows - 1; i++) 
    {
        for (int j = i + 1; j < rows; j++) 
        {
            if (diagonal[i] > diagonal[j]) 
            {
                int temp = diagonal[i];
                diagonal[i] = diagonal[j];
                diagonal[j] = temp;
            }
        }
    }
    for (int i = 0; i < rows - 1; i++) 
    {
        if (diagonal[i] == diagonal[i+1]) 
        {
            isDistinct = 0; 
            break;
        }
    }
    if (isDistinct) 
    {
        printf("True\n");
    } 
    else 
    {
        printf("False\n");
    }
    return 0;
}
*/Q78 : Find the sum of main diagonal elements for a sqaure matrix. */
#include <stdio.h>
int main() 
{
    int rows, cols;
    printf("Enter the number of rows and columns: ");
    scanf("%d %d", &rows, &cols);
    if (rows != cols) 
    {
        printf("The matrix is not a square matrix. Cannot find the sum of the main diagonal.\n");
        return 1; 
    }

    int matrix[rows][cols];
    int diagonal_sum = 0;
    printf("Enter the elements of the matrix:\n");
    for (int i = 0; i < rows; i++) 
    {
        for (int j = 0; j < cols; j++) 
        {
            scanf("%d", &matrix[i][j]);
        }
    }
    for (int i = 0; i < rows; i++) 
    {
        diagonal_sum += matrix[i][i];
    }
    printf("The sum of the main diagonal elements is: %d\n", diagonal_sum);
    return 0;
}
