/*Q65: Search in a sorted array using binary search.*/

#include <stdio.h>
int main() {
    int n, i, key, low, high, mid, found = 0;
    printf("Enter the number of elements in the sorted array: ");
    scanf("%d", &n);
    int arr[n];

    printf("Enter %d elements in ascending order:\n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

   
    printf("Enter the element to search: ");
    scanf("%d", &key);

    
    low = 0;
    high = n - 1;

    while(low <= high) {
        mid = (low + high) / 2;

        if(arr[mid] == key) {
            printf("Element %d found at position %d\n", key, mid + 1);
            found = 1;
            break;
        }
        else if(arr[mid] < key) {
            low = mid + 1;
        }
        else {
            high = mid - 1; 
        }
    }
    if(!found) {
        printf("Element %d not found in the array.\n", key);
    }
    return 0;
}




/*Q66: Insert an element in a sorted array at the appropriate position.*/

#include <stdio.h>
int main() {
    int n, i, key, pos;
    printf("Enter the number of elements in the sorted array: ");
    scanf("%d", &n);

    int arr[100]; // fixed max size to allow insertion
    printf("Enter %d elements in ascending order:\n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    printf("Enter the element to insert: ");
    scanf("%d", &key);

    pos = n;
    for(i = 0; i < n; i++) {
        if(key < arr[i]) {
            pos = i;
            break;
        }
    }

    for(i = n; i > pos; i--) {
        arr[i] = arr[i-1];
    }

    arr[pos] = key;
    n++; // increase size

    printf("Array after insertion:\n");
    for(i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    return 0;
}
